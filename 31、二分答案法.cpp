//一、二叉树的层序遍历  https://leetcode.cn/problems/binary-tree-level-order-traversal/

//二、二叉树的锯齿形层序遍历 https://leetcode.cn/problems/binary-tree-zigzag-level-order-traversal/

//三、二叉树的最大特殊宽度 https://leetcode.cn/problems/maximum-width-of-binary-tree/

//四、求二叉树的（1）最大深度 https://leetcode.cn/problems/maximum-depth-of-binary-tree/

// （2）最小深度 https://leetcode.cn/problems/minimum-depth-of-binary-tree/

//五、二叉树先序序列化和反序列化 https://leetcode.cn/problems/serialize-and-deserialize-binary-tree/

//六、二叉树按层序列化和反序列化 https://leetcode.cn/problems/serialize-and-deserialize-binary-tree/

//七、利用先序与中序遍历序列构造二叉树 https://leetcode.cn/problems/construct-binary-tree-from-preorder-and-inorder-traversal/

//八、验证完全二叉树 https://leetcode.cn/problems/check-completeness-of-a-binary-tree/

//九、求完全二叉树的节点个数 https://leetcode.cn/problems/count-complete-tree-nodes/

//十、普通二叉树上寻找两个节点的最近公共祖先 https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree/

//十一、搜索二叉树上寻找两个节点的最近公共祖先 https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-search-tree/

//十二、收集累加和等于aim的所有路径 https://leetcode.cn/problems/path-sum-ii/

//十三、验证平衡二叉树 https://leetcode.cn/problems/balanced-binary-tree/

//十四、验证搜索二叉树 https://leetcode.cn/problems/validate-binary-search-tree/

//十五、修剪搜索二叉树 https://leetcode.cn/problems/trim-a-binary-search-tree/

//十六、二叉树打家劫舍问题 https://leetcode.cn/problems/house-robber-iii/